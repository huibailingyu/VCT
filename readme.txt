1. 安装：
  1.1. 不用安装，解压在一个目录里面就可以运行；
  1.2. 安装后有三个文件, vct.exe, setting.ini 和readme.txt；
  1.3. vct.exe为执行程序，使用Delphi 2010开发，双击运行；
  1.4. setting.ini为配置文件，主要是程序临时文件的输出目录。这个目录在程序启动和退出的时候都会被清空。
       因此请使用一个空目录，不要被它删除了你机器上的有用文件。
  1.5. readme.txt为本文档；   
  1.6. 需要系统内有ffmpeg ffprobe程序，否则程序提示错误；
  1.7. 只能在windows系统上运行.测试不充分，目前只在三台机器上测过（都是win10系统），所以不确定是否会有些库找不到的情况；
  1.8. 错误处理可能不足，如果出现程序错误，请强制终止程序并重新来过。请多些耐心 :)


2. 启动程序
  2.1 双击vct.exe启动程序；
  2.2 拖拽视频/图像文件到vct图标上，启动程序并显示该文件；
  2.3 打开文件方法：
     2.3.1 类似2.2拖拽文件到vct图标上；
     2.3.2 vct程序运行后，拖拽1-2视频文件到窗口中，将播放文件；
     2.3.3 鼠标右键弹出菜单，选择 Open Files，可以打开文件。

  
3. 播放
  3.1 播放模式：
     3.1.1 单帧模式，逐帧显示视频帧。使用方向按键来控制；
           方向左键显示前一帧；
           方向右键显示后一帧；
           方向上键显示第一帧；
           方向下键和空格键启动连续播放模式；
     3.1.2 连续模式，连续播放视频，此时为了加快显示速度，不计算psnr；
           在连续模式下，点击方向按键和空格键，结束连续模式。

   3.2 显示模式，双击窗体在下面三种模式中切换
     3.2.1 一般模式，程序运行的启动模式，窗口大小较小；
     3.2.2 全屏模式，窗口铺满整个显示窗口，视频按照大小分布在中心区域。如果图像尺寸超过显示尺寸，会被保持宽高比的拉伸到屏幕中央；
     3.2.3 原图模式，窗口铺满整个显示窗口，如果图像尺寸超过显示尺寸，只显示图像的部分区域。
           这个模式是为了更加清晰的看到图像之间的差别，不会因为缩放显示，而掩盖部分差别区域。

   3.3 单双视频
     3.3.1 单视频模式，只打开并显示一个视频；
     3.3.2 双视频模式，打开并显示两个视频，左边为Frame1，右边为Frame2，中间由白色分割线分割。分割线可以通过鼠标点拖拽改变位置。
     3.3.3 Open Files菜单启动单或双视频模式；按键Esc由双视频模式推出到单视频模式，再按一次Esc关闭所有视频。


4. 使用：
  4.1. 右键菜单，主要有以下功能：
     4.1.1 Open Files, 打开视频文件，可以一次选择多个文件，但程序最多只接受两个输入;
     4.1.2 Show Frame Info, 显示视频帧信息 （帧类型，大小），由于整个视频ffprobe -show_frames跑的很慢，所以这个功能目前关闭；
     4.1.3 Show PSNR，当打开两个视频文件的时候，单帧播放模式下计算并显示两帧之间的亮度psnr。注意这里计算出来的结果与ffmpeg计算出来的结果有些不同，这个问题还需要定位。连续播放模式下不计算psnr。
     4.1.4 GoTo Frame, 弹出输入框，输入期望播放的帧号，解码并播放该帧；
     4.1.5 Save Frame 1, 存储左边视频当前帧；
     4.1.6 Save Frame 2, 如有，则存储右边视频当前帧；
     4.1.7 Save Frame 1 Frame 2, 将左右视频存储在同一帧内；
     4.1.8 Frame1 --, 调节左边视频，帧号减一，右边视频不变；
     4.1.9 Frame1 ++, 调节左边视频，帧号加一，右边视频不变；
     4.1.10 Frame2 --, 调节右边视频，帧号减一，左边视频不变；
     4.1.11 Frame2 ++, 调节右边视频，帧号减一，左边视频不变；
     4.1.12 Setting, 设置输入目录，解码输出格式，是否使用分段编码等，结果会存入setting.ini文件；
     4.1.13 About, 关于，目前没实现；
     4.1.14 Exit，关闭程序

  4.2. 鼠标按键
     4.2.1 鼠标移动，
           a. 移动到窗体底部的时候会触发控制条和预览图片显示（只能预览已经解码）；
           b. 移动到双图像模式的分割线附件，鼠标变成crHSplit类型，可以拖拽分割线位置；   
     4.2.2 鼠标左键点击，在原图模式下，鼠标左键点击并拖拽，可以移动当前显示窗内视频内容
     4.2.3 鼠标左键双击，切换显示模式
     4.2.4 鼠标右键，弹出选择菜单

  4.3. 鼠标拖拽
     4.3.1 拖拽视频文件到vct图标上，可以启动vct程序，并解码显示视频帧；
     4.3.2 打开vct程序后，拖放1-2个视频到vct窗口内，可以解码显示视频帧；

  4.4. 键盘按键
     4.4.1 方向键 2.1.1 控制播放模式；
     4.4.2 空格键，与方向下键功能一样，暂停或启动连续播放模式；
     4.4.3 按键 A, D, W, X在原图模式下，移动当前显示窗内视频内容，与鼠标左键拖拽操作一致；按键S，回到中央内容；
     4.4.4 Esc键，切换双，单视频模式；
   
  4.5. 系统按键
     4.5.1 窗口最小键
     4.5.2 关闭程序键


5. 日志
   在vct目录下输出日志文件，里面记录ffmpeg调用情况


6. 实现机制
   6.1.1 前端GUI，负责完成显示，控制等交互功能；
         后端使用ffmpeg分段解码输入视频，解码后的数据存为多帧图片或者多段无压缩视频。
         如以下命令，缺省解码输出为jpg文件。每次解码2s数据
         ffmpeg -an -ss 2 -v quiet -i input.mp4 -t 2 -f image2 -start_number 60 -q:v 1 -y outfoloder\input_1_%d.jpg
   6.1.2 各输出方式之间的比较 
         采用视频方法和i(avi, rgb)，输出目录中的文件较少，便于管理，但首帧延迟较大，需要整段视频都解码完毕才能获取第一帧数据。
         无压缩avi格式，有时候没有得到正确的rgb数据起始位置，显示出现错误；rgb格式不会出现此类错误，但rgb数据无法程序外播放。
         选择图像方式(jpg, png, bmp)，首帧图片延迟较低，可以较快的显示出首帧图像；
           jpg格式，数据量非常小(4K分辨率，可以到1MB),存储较快，但因为是有损压缩，会有些主观质量损失；
           png格式，数据量较小(4K分辨率，可以到5MB),无损压缩，解码速度不快；
           bmp格式，数据量非常大(4K分辨率，可以到24MB), 无损压缩，解码显示最快，但是数据量大，文件IO慢，同时占用硬盘空间太大。
           相比较推荐使用jpg或png。
   
